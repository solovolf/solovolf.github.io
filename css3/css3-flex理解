[本文引用自教程](https://lzw.me/pages/css3/)

使用所有flex弹性盒子必须要将父元素 设置成如下  display:flex;


flex-grow
---------

**设置或检索弹性盒的扩展比率。**
参数：&lt;number&gt;用数值来定义扩展比率。不允许负值
flex-grow的默认值为0，如果没有显示定义该属性，是不会拥有分配剩余空间权利的
使用的话分为两种情况
一种是未设置固定宽度
则按照相对应的比例缩放
一种是已经设置了相对应的宽度
则缩放比例变成
显示规则：

 1. 总长度-固定长度=多余长度
 2. 多余长度/(all flex-grow val)*设置的比例+固定长度=最终长度

flex-shrink
-----------

**设置或检索弹性盒的收缩比率**
参数：&lt;number&gt;用数值来定义收缩比率。不允许负值

flex-shrink的默认值为1，如果没有显示定义该属性，将会自动按照默认值1在所有因子相加之后计算比率来进行空间收缩。
首先这个需要定义每个子元素的宽度，这些宽度的总和需要超过父元素的宽度，如果没有超过则伸缩效果无效。
显示规则：

 1. 子元素宽度总和-父元素宽度=超出的宽度
 2. 子元素定义宽度-（超出的宽度／ flex-shrink总和*单个shrink）=最终宽度

flex-basis
----------

**设置或检索弹性盒伸缩基准值**
flex-basis：&lt;length&gt; | &lt;percentage&gt; | auto
auto：无特定宽度值，取决于其它属性值
&lt;length&gt;：用长度值来定义宽度。不允许负值
&lt;percentage&gt;：用百分比来定义宽度。不允许负值

 - 如果所有子元素的基准值之和大于剩余空间，则会根据每项设置的基准值，按比率伸缩剩余空间
 - 覆盖其他css设置的宽度值

显示规则：

 1. 子元素宽度总和-父元素宽度=超出的宽度
 2. 子元素定义宽度／子元素宽度总和=子元素占比
 3. 超出部分*子元素占比=差距宽度
 4. 元素定义宽度-差距宽度=最终宽度

flex-flow
---------

**复合属性。设置或检索弹性盒模型对象的子元素排列方式。**
[ flex-direction ]：
定义弹性盒子元素的排列方向。
row（默认值）：横向从左到右排列（左对齐），默认的排列方式。
row-reverse： 反转横向排列（右对齐，从后往前排，最后一项排在最前面。
column：纵向排列。
row-reverse： 反转纵向排列，从后往前排，最后一项排在最上面。
排列方式有四种组合  纵横／正反

[ flex-wrap ]：定义弹性盒子元素溢出父容器时是否换行。
nowrap（默认值）：当子元素溢出父容器时不换行。
wrap：当子元素溢出父容器时自动换行。
wrap-reverse：反转 wrap 排列。


align-content
-------------

**设置或检索弹性盒堆叠伸缩行的对齐方式。**
flex-start： 各行向弹性盒容器的起始位置堆叠。弹性盒容器中第一行的侧轴起始边界紧靠住该弹性盒容器的侧轴起始边界，之后的每一行都紧靠住前面一行。
flex-end： 各行向弹性盒容器的结束位置堆叠。弹性盒容器中最后一行的侧轴起结束界紧靠住该弹性盒容器的侧轴结束边界，之后的每一行都紧靠住前面一行。
center：各行向弹性盒容器的中间位置堆叠。各行两两紧靠住同时在弹性盒容器中居中对齐，保持弹性盒容器的侧轴起始内容边界和第一行之间的距离与该容器的侧轴结束内容边界与第最后一行之间的距离相等。（如果剩下的空间是负数，则各行会向两个方向溢出的相等距离。）
space-between：各行在弹性盒容器中平均分布。如果剩余的空间是负数或弹性盒容器中只有一行，该值等效于'flex-start'。在其它情况下，第一行的侧轴起始边界紧靠住弹性盒容器的侧轴起始内容边界，最后一行的侧轴结束边界紧靠住弹性盒容器的侧轴结束内容边界，剩余的行则按一定方式在弹性盒窗口中排列，以保持两两之间的空间相等。
space-around： 各行在弹性盒容器中平均分布，两端保留子元素与子元素之间间距大小的一半。如果剩余的空间是负数或弹性盒容器中只有一行，该值等效于'center'。在其它情况下，各行会按一定方式在弹性盒容器中排列，以保持两两之间的空间相等，同时第一行前面及最后一行后面的空间是其他空间的一半。
stretch（默认值）：各行将会伸展以占用剩余的空间。如果剩余的空间是负数，该值等效于'flex-start'。在其它情况下，剩余空间被所有行平分，以扩大它们的侧轴尺寸。


align-items
-----------

**设置或检索弹性盒子元素在侧轴（纵轴）方向上的对齐方式。**
flex-start：
弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴起始边界。
flex-end： 弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴结束边界。
center： 弹性盒子元素在该行的侧轴（纵轴）上居中放置。（如果该行的尺寸小于弹性盒子元素的尺寸，则会向两个方向溢出相同的长度）。 
baseline：如弹性盒子元素的行内轴与侧轴为同一条，则该值与'flex-start'等效。其它情况下，该值将参与基线对齐。 
stretch（默认值）： 如果指定侧轴大小的属性值为'auto'，则其值会使项目的边距盒的尺寸尽可能接近所在行的尺寸，但同时会遵照'min/max-width/height'属性的限制。 

align-self
----------

**设置或检索弹性盒子元素在侧轴（纵轴）方向上的对齐方式。**
auto（默认值）：如果'align-self'的值为'auto'，则其计算值为元素的父元素的'align-items'值，如果其没有父元素，则计算值为'stretch'。
flex-start： 弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴起始边界。 
flex-end： 弹性盒子元素的侧轴（纵轴）起始位置的边界紧靠住该行的侧轴结束边界。 
center： 弹性盒子元素在该行的侧轴（纵轴）上居中放置。（如果该行的尺寸小于弹性盒子元素的尺寸，则会向两个方向溢出相同的长度）。 
baseline： 如弹性盒子元素的行内轴与侧轴为同一条，则该值与'flex-start'等效。其它情况下，该值将参与基线对齐。 
stretch： 如果指定侧轴大小的属性值为'auto'，则其值会使项目的边距盒的尺寸尽可能接近所在行的尺寸，但同时会遵照'min/max-width/height'属性的限制。 

>**align-self属性与align-items属性的区别在于：align-items被指定为容器元素的样式属性，用于指定所有子元素的对齐方式，而align-self属性被指定为某些子元素的样式属性，用于单独指定这些子元素的对齐方式。**

justify-content
---------------

**设置或检索弹性盒子元素在主轴（横轴）方向上的对齐方式。**
flex-start：弹性盒子元素将向行起始位置对齐。该行的第一个子元素的主起始位置的边界将与该行的主起始位置的边界对齐，同时所有后续的伸缩盒项目与其前一个项目对齐。（默认值）
flex-end：弹性盒子元素将向行结束位置对齐。该行的第一个子元素的主结束位置的边界将与该行的主结束位置的边界对齐，同时所有后续的伸缩盒项目与其前一个项目对齐。
center：弹性盒子元素将向行中间位置对齐。该行的子元素将相互对齐并在行中居中对齐，同时第一个元素与行的主起始位置的边距等同与最后一个元素与行的主结束位置的边距（如果剩余空间是负数，则保持两端相等长度的溢出）。
space-between：弹性盒子元素会平均地分布在行里。如果最左边的剩余空间是负数，或该行只有一个子元素，则该值等效于'flex-start'。在其它情况下，第一个元素的边界与行的主起始位置的边界对齐，同时最后一个元素的边界与行的主结束位置的边距对齐，而剩余的伸缩盒项目则平均分布，并确保两两之间的空白空间相等。
space-around：弹性盒子元素会平均地分布在行里，两端保留子元素与子元素之间间距大小的一半。如果最左边的剩余空间是负数，或该行只有一个伸缩盒项目，则该值等效于'center'。在其它情况下，伸缩盒项目则平均分布，并确保两两之间的空白空间相等，同时第一个元素前的空间以及最后一个元素后的空间为其他空白空间的一半。

order
-----

设置或检索弹性盒模型对象的子元素出現的順序。

默认值：0

数值越低 出现的越前



flex
--------
复合属性  默认值看组合情况
一般如果三个值都被赋值则第一个值（flex-grow）被忽略。
none：none关键字的计算值为: 0 0 auto
[ flex-grow ]：定义弹性盒子元素的扩展比率。
[ flex-shrink ]：定义弹性盒子元素的收缩比率。
[ flex-basis ]：定义弹性盒子元素的默认基准值。

组合使用的公式见flex-basis 
